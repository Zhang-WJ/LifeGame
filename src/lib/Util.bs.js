// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Config from "./Config.bs.js";
import * as Js_math from "rescript/lib/es6/js_math.js";
import * as Belt_HashMapString from "rescript/lib/es6/belt_HashMapString.js";

function avgFrameRate(ticks, startedAt) {
  return Js_math.ceil(ticks / ((Date.now() - startedAt) / 1000));
}

var sqrSize = Math.imul(Config.boardSize, Config.boardSize);

var sumOfSquares = (sqrSize << 1);

var diagonalLength = Math.sqrt(sumOfSquares);

var hueIncrement = 360 / diagonalLength;

var colorCache = Belt_HashMapString.make(sqrSize);

function rainbowHSL(y, x) {
  var cacheKey = "" + y + "-" + x;
  var found = Belt_HashMapString.get(colorCache, cacheKey);
  var match;
  if (found !== undefined) {
    match = [
      found,
      true
    ];
  } else {
    var sumOfPoints = Math.imul(y, y) + Math.imul(x, x) | 0;
    var raw = Math.sqrt(sumOfPoints) * hueIncrement;
    var h = Js_math.floor(raw);
    match = [
      h,
      false
    ];
  }
  var color = match[0];
  if (!match[1]) {
    Belt_HashMapString.set(colorCache, cacheKey, color);
  }
  return color;
}

var Colors = {
  sqrSize: sqrSize,
  sumOfSquares: sumOfSquares,
  diagonalLength: diagonalLength,
  hueIncrement: hueIncrement,
  colorCache: colorCache,
  rainbowHSL: rainbowHSL
};

export {
  avgFrameRate ,
  Colors ,
  
}
/* diagonalLength Not a pure module */
