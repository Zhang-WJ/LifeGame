// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Grid = require("./Grid.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var Model = require("../lib/Model.bs.js");
var React = require("react");
var Controls = require("./Controls.bs.js");
var CoreComponents = require("./CoreComponents.bs.js");

function Lifegame(Props) {
  var match = React.useReducer(Model.Reducers.root, Model.initialState);
  var dispatch = match[1];
  var state = match[0];
  var handleToggleTile = React.useCallback((function (y) {
          return function (x) {
            return Curry._1(dispatch, /* Toggle */{
                        _0: [
                          y,
                          x
                        ]
                      });
          };
        }), []);
  var handleReset = React.useCallback((function (param) {
          return Curry._1(dispatch, /* Reset */1);
        }), []);
  var handleRandom = React.useCallback((function (param) {
          return Curry._1(dispatch, /* Random */0);
        }), []);
  var handleTick = React.useCallback((function (param) {
          return Curry._1(dispatch, /* Tick */4);
        }), []);
  var handleToggleAutoPlay = React.useCallback((function (param) {
          var play = function (param) {
            state.animationFrameId.contents = requestAnimationFrame(play);
            return Curry._1(dispatch, /* Tick */4);
          };
          if (state.isPlaying) {
            cancelAnimationFrame(state.animationFrameId.contents);
            return Curry._1(dispatch, /* Stop */3);
          } else {
            play(undefined);
            return Curry._1(dispatch, /* Start */2);
          }
        }), [
        state.animationFrameId,
        state.isPlaying
      ]);
  var label = state.isPlaying ? "avg update rate: " + (String(state.frameRate) + " fps") : "";
  return React.createElement(CoreComponents.Root.make, {
              children: React.createElement(CoreComponents.Content.make, {
                    children: null
                  }, React.createElement(CoreComponents.AppBar.make, {
                        children: "Conway's Game of Life"
                      }), React.createElement(Controls.make, {
                        isPlaying: state.isPlaying,
                        onReset: handleReset,
                        onRandom: handleRandom,
                        onTick: handleTick,
                        onToggleAutoplay: handleToggleAutoPlay
                      }), React.createElement(Grid.make, {
                        data: state.grid,
                        onToggle: handleToggleTile
                      }), React.createElement("div", undefined, label))
            });
}

var R;

var make = Lifegame;

exports.R = R;
exports.make = make;
/* Grid Not a pure module */
